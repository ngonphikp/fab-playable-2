using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Crop : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Crop(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Crop(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4804682956945430766,13221981395855915170));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Single TimeGerm
	{
		get
		{
			return _TimeGerm[Index];
		}
		set
		{
			_TimeGerm[Index] = value;
		}
	}
	public System.Single TimeGrow
	{
		get
		{
			return _TimeGrow[Index];
		}
		set
		{
			_TimeGrow[Index] = value;
		}
	}
	public System.Single TimeMature
	{
		get
		{
			return _TimeMature[Index];
		}
		set
		{
			_TimeMature[Index] = value;
		}
	}
	public System.Int32 Quantity
	{
		get
		{
			return _Quantity[Index];
		}
		set
		{
			_Quantity[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5246270189865479589,9565983763380535456));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5046846324468739938,8614752155327691173));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_TimeGerm;
	public static BansheeGz.BGDatabase.BGFieldFloat _TimeGerm
	{
		get
		{
			if(_ufle12jhs77_TimeGerm==null || _ufle12jhs77_TimeGerm.IsDeleted) _ufle12jhs77_TimeGerm=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5033900021673936276,1102244855369512322));
			return _ufle12jhs77_TimeGerm;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_TimeGrow;
	public static BansheeGz.BGDatabase.BGFieldFloat _TimeGrow
	{
		get
		{
			if(_ufle12jhs77_TimeGrow==null || _ufle12jhs77_TimeGrow.IsDeleted) _ufle12jhs77_TimeGrow=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5327820163654911141,1441764995510398129));
			return _ufle12jhs77_TimeGrow;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_TimeMature;
	public static BansheeGz.BGDatabase.BGFieldFloat _TimeMature
	{
		get
		{
			if(_ufle12jhs77_TimeMature==null || _ufle12jhs77_TimeMature.IsDeleted) _ufle12jhs77_TimeMature=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5512427840023439711,312355959967515831));
			return _ufle12jhs77_TimeMature;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Quantity;
	public static BansheeGz.BGDatabase.BGFieldInt _Quantity
	{
		get
		{
			if(_ufle12jhs77_Quantity==null || _ufle12jhs77_Quantity.IsDeleted) _ufle12jhs77_Quantity=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5052525237014333160,7157952737314309542));
			return _ufle12jhs77_Quantity;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_Crop() : base(MetaDefault)
	{
	}
	private DB_Crop(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Crop(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Crop(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Crop FindEntity(Predicate<DB_Crop> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Crop) entity)) as DB_Crop;
	}
	public static List<DB_Crop> FindEntities(Predicate<DB_Crop> filter, List<DB_Crop> result=null, Comparison<DB_Crop> sort=null)
	{
		result = result ?? new List<DB_Crop>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Crop) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Crop) e1, (DB_Crop) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Crop) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Crop> action, Predicate<DB_Crop> filter=null, Comparison<DB_Crop> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Crop) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Crop) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Crop)e1,(DB_Crop)e2));
	}
	public static DB_Crop GetEntity(BGId entityId)
	{
		return (DB_Crop) MetaDefault.GetEntity(entityId);
	}
	public static DB_Crop GetEntity(int index)
	{
		return (DB_Crop) MetaDefault[index];
	}
	public static DB_Crop GetEntity(string entityName)
	{
		return (DB_Crop) MetaDefault.GetEntity(entityName);
	}
	public static DB_Crop NewEntity()
	{
		return (DB_Crop) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Animal : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Animal(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Animal(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4824648583797566743,18034200986099352727));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Single Speed
	{
		get
		{
			return _Speed[Index];
		}
		set
		{
			_Speed[Index] = value;
		}
	}
	public System.Single TimeMature
	{
		get
		{
			return _TimeMature[Index];
		}
		set
		{
			_TimeMature[Index] = value;
		}
	}
	public System.Int32 Quantity
	{
		get
		{
			return _Quantity[Index];
		}
		set
		{
			_Quantity[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5170258832353377355,2311474262999270276));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5522822288239471452,6847177771105745049));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Speed;
	public static BansheeGz.BGDatabase.BGFieldFloat _Speed
	{
		get
		{
			if(_ufle12jhs77_Speed==null || _ufle12jhs77_Speed.IsDeleted) _ufle12jhs77_Speed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5350641144857804600,3681799491335393158));
			return _ufle12jhs77_Speed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_TimeMature;
	public static BansheeGz.BGDatabase.BGFieldFloat _TimeMature
	{
		get
		{
			if(_ufle12jhs77_TimeMature==null || _ufle12jhs77_TimeMature.IsDeleted) _ufle12jhs77_TimeMature=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5728087827847779861,8456302732036575367));
			return _ufle12jhs77_TimeMature;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Quantity;
	public static BansheeGz.BGDatabase.BGFieldInt _Quantity
	{
		get
		{
			if(_ufle12jhs77_Quantity==null || _ufle12jhs77_Quantity.IsDeleted) _ufle12jhs77_Quantity=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5393339396370651132,7745125450886225316));
			return _ufle12jhs77_Quantity;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_Animal() : base(MetaDefault)
	{
	}
	private DB_Animal(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Animal(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Animal(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Animal FindEntity(Predicate<DB_Animal> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Animal) entity)) as DB_Animal;
	}
	public static List<DB_Animal> FindEntities(Predicate<DB_Animal> filter, List<DB_Animal> result=null, Comparison<DB_Animal> sort=null)
	{
		result = result ?? new List<DB_Animal>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Animal) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Animal) e1, (DB_Animal) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Animal) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Animal> action, Predicate<DB_Animal> filter=null, Comparison<DB_Animal> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Animal) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Animal) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Animal)e1,(DB_Animal)e2));
	}
	public static DB_Animal GetEntity(BGId entityId)
	{
		return (DB_Animal) MetaDefault.GetEntity(entityId);
	}
	public static DB_Animal GetEntity(int index)
	{
		return (DB_Animal) MetaDefault[index];
	}
	public static DB_Animal GetEntity(string entityName)
	{
		return (DB_Animal) MetaDefault.GetEntity(entityName);
	}
	public static DB_Animal NewEntity()
	{
		return (DB_Animal) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Human : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Human(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Human(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4614317623949303905,7060110700492495289));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Single Speed
	{
		get
		{
			return _Speed[Index];
		}
		set
		{
			_Speed[Index] = value;
		}
	}
	public System.Int32 MaxEnery
	{
		get
		{
			return _MaxEnery[Index];
		}
		set
		{
			_MaxEnery[Index] = value;
		}
	}
	public System.Single RatioSleep
	{
		get
		{
			return _RatioSleep[Index];
		}
		set
		{
			_RatioSleep[Index] = value;
		}
	}
	public System.Single RatioWc
	{
		get
		{
			return _RatioWc[Index];
		}
		set
		{
			_RatioWc[Index] = value;
		}
	}
	public System.Int32 EnerySow
	{
		get
		{
			return _EnerySow[Index];
		}
		set
		{
			_EnerySow[Index] = value;
		}
	}
	public System.Int32 EneryFeed
	{
		get
		{
			return _EneryFeed[Index];
		}
		set
		{
			_EneryFeed[Index] = value;
		}
	}
	public System.Int32 EneryWater
	{
		get
		{
			return _EneryWater[Index];
		}
		set
		{
			_EneryWater[Index] = value;
		}
	}
	public System.Int32 EneryGain
	{
		get
		{
			return _EneryGain[Index];
		}
		set
		{
			_EneryGain[Index] = value;
		}
	}
	public System.Int32 EneryCollect
	{
		get
		{
			return _EneryCollect[Index];
		}
		set
		{
			_EneryCollect[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5409427823629251221,11215478939548102033));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5145267188251211374,4019801564959999396));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Speed;
	public static BansheeGz.BGDatabase.BGFieldFloat _Speed
	{
		get
		{
			if(_ufle12jhs77_Speed==null || _ufle12jhs77_Speed.IsDeleted) _ufle12jhs77_Speed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5226014189478477662,12677753358645341109));
			return _ufle12jhs77_Speed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxEnery;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxEnery
	{
		get
		{
			if(_ufle12jhs77_MaxEnery==null || _ufle12jhs77_MaxEnery.IsDeleted) _ufle12jhs77_MaxEnery=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5310966952102397082,3589272019355689652));
			return _ufle12jhs77_MaxEnery;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RatioSleep;
	public static BansheeGz.BGDatabase.BGFieldFloat _RatioSleep
	{
		get
		{
			if(_ufle12jhs77_RatioSleep==null || _ufle12jhs77_RatioSleep.IsDeleted) _ufle12jhs77_RatioSleep=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5358262313496978392,2843846872380587175));
			return _ufle12jhs77_RatioSleep;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RatioWc;
	public static BansheeGz.BGDatabase.BGFieldFloat _RatioWc
	{
		get
		{
			if(_ufle12jhs77_RatioWc==null || _ufle12jhs77_RatioWc.IsDeleted) _ufle12jhs77_RatioWc=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5381326965306581655,10798274074913210261));
			return _ufle12jhs77_RatioWc;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EnerySow;
	public static BansheeGz.BGDatabase.BGFieldInt _EnerySow
	{
		get
		{
			if(_ufle12jhs77_EnerySow==null || _ufle12jhs77_EnerySow.IsDeleted) _ufle12jhs77_EnerySow=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5633421199852509269,5115658415412794046));
			return _ufle12jhs77_EnerySow;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EneryFeed;
	public static BansheeGz.BGDatabase.BGFieldInt _EneryFeed
	{
		get
		{
			if(_ufle12jhs77_EneryFeed==null || _ufle12jhs77_EneryFeed.IsDeleted) _ufle12jhs77_EneryFeed=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4854240120158628410,18082332732976994438));
			return _ufle12jhs77_EneryFeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EneryWater;
	public static BansheeGz.BGDatabase.BGFieldInt _EneryWater
	{
		get
		{
			if(_ufle12jhs77_EneryWater==null || _ufle12jhs77_EneryWater.IsDeleted) _ufle12jhs77_EneryWater=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4885789159129635117,3903122971451198137));
			return _ufle12jhs77_EneryWater;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EneryGain;
	public static BansheeGz.BGDatabase.BGFieldInt _EneryGain
	{
		get
		{
			if(_ufle12jhs77_EneryGain==null || _ufle12jhs77_EneryGain.IsDeleted) _ufle12jhs77_EneryGain=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5023258053514183101,2890713501871376290));
			return _ufle12jhs77_EneryGain;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EneryCollect;
	public static BansheeGz.BGDatabase.BGFieldInt _EneryCollect
	{
		get
		{
			if(_ufle12jhs77_EneryCollect==null || _ufle12jhs77_EneryCollect.IsDeleted) _ufle12jhs77_EneryCollect=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4711728758399301824,2664891154781886093));
			return _ufle12jhs77_EneryCollect;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_Human() : base(MetaDefault)
	{
	}
	private DB_Human(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Human(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Human(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Human FindEntity(Predicate<DB_Human> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Human) entity)) as DB_Human;
	}
	public static List<DB_Human> FindEntities(Predicate<DB_Human> filter, List<DB_Human> result=null, Comparison<DB_Human> sort=null)
	{
		result = result ?? new List<DB_Human>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Human) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Human) e1, (DB_Human) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Human) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Human> action, Predicate<DB_Human> filter=null, Comparison<DB_Human> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Human) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Human) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Human)e1,(DB_Human)e2));
	}
	public static DB_Human GetEntity(BGId entityId)
	{
		return (DB_Human) MetaDefault.GetEntity(entityId);
	}
	public static DB_Human GetEntity(int index)
	{
		return (DB_Human) MetaDefault[index];
	}
	public static DB_Human GetEntity(string entityName)
	{
		return (DB_Human) MetaDefault.GetEntity(entityName);
	}
	public static DB_Human NewEntity()
	{
		return (DB_Human) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_GroundLand : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_GroundLand(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_GroundLand(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5044038080687617423,3155487710793515952));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Int32 Index
	{
		get
		{
			return _Index[Index];
		}
		set
		{
			_Index[Index] = value;
		}
	}
	public System.String TypeUp
	{
		get
		{
			return _TypeUp[Index];
		}
		set
		{
			_TypeUp[Index] = value;
		}
	}
	public System.Int32 Cost
	{
		get
		{
			return _Cost[Index];
		}
		set
		{
			_Cost[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Int32 Exp
	{
		get
		{
			return _Exp[Index];
		}
		set
		{
			_Exp[Index] = value;
		}
	}
	public System.String Visual
	{
		get
		{
			return _Visual[Index];
		}
		set
		{
			_Visual[Index] = value;
		}
	}
	public System.Single Idle
	{
		get
		{
			return _Idle[Index];
		}
		set
		{
			_Idle[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5123685360571961936,3753000418791644607));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5053572801960426223,5457004417156015498));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Index
	{
		get
		{
			if(_ufle12jhs77_Index==null || _ufle12jhs77_Index.IsDeleted) _ufle12jhs77_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5141170127000992334,14377528296156773015));
			return _ufle12jhs77_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_TypeUp;
	public static BansheeGz.BGDatabase.BGFieldString _TypeUp
	{
		get
		{
			if(_ufle12jhs77_TypeUp==null || _ufle12jhs77_TypeUp.IsDeleted) _ufle12jhs77_TypeUp=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5555136993736232024,3273324998870288297));
			return _ufle12jhs77_TypeUp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _Cost
	{
		get
		{
			if(_ufle12jhs77_Cost==null || _ufle12jhs77_Cost.IsDeleted) _ufle12jhs77_Cost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5481412607797010109,12506957400125228673));
			return _ufle12jhs77_Cost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4917845675546591159,13875689122753667775));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Exp;
	public static BansheeGz.BGDatabase.BGFieldInt _Exp
	{
		get
		{
			if(_ufle12jhs77_Exp==null || _ufle12jhs77_Exp.IsDeleted) _ufle12jhs77_Exp=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5212965510523252846,12760739194176521891));
			return _ufle12jhs77_Exp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Visual;
	public static BansheeGz.BGDatabase.BGFieldString _Visual
	{
		get
		{
			if(_ufle12jhs77_Visual==null || _ufle12jhs77_Visual.IsDeleted) _ufle12jhs77_Visual=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5495701261912486311,5163618919425425067));
			return _ufle12jhs77_Visual;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Idle;
	public static BansheeGz.BGDatabase.BGFieldFloat _Idle
	{
		get
		{
			if(_ufle12jhs77_Idle==null || _ufle12jhs77_Idle.IsDeleted) _ufle12jhs77_Idle=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4984265496906059343,11669461628845747631));
			return _ufle12jhs77_Idle;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_GroundLand() : base(MetaDefault)
	{
	}
	private DB_GroundLand(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_GroundLand(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_GroundLand(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_GroundLand FindEntity(Predicate<DB_GroundLand> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_GroundLand) entity)) as DB_GroundLand;
	}
	public static List<DB_GroundLand> FindEntities(Predicate<DB_GroundLand> filter, List<DB_GroundLand> result=null, Comparison<DB_GroundLand> sort=null)
	{
		result = result ?? new List<DB_GroundLand>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_GroundLand) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_GroundLand) e1, (DB_GroundLand) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_GroundLand) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_GroundLand> action, Predicate<DB_GroundLand> filter=null, Comparison<DB_GroundLand> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_GroundLand) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_GroundLand) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_GroundLand)e1,(DB_GroundLand)e2));
	}
	public static DB_GroundLand GetEntity(BGId entityId)
	{
		return (DB_GroundLand) MetaDefault.GetEntity(entityId);
	}
	public static DB_GroundLand GetEntity(int index)
	{
		return (DB_GroundLand) MetaDefault[index];
	}
	public static DB_GroundLand GetEntity(string entityName)
	{
		return (DB_GroundLand) MetaDefault.GetEntity(entityName);
	}
	public static DB_GroundLand NewEntity()
	{
		return (DB_GroundLand) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_GroundCage : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_GroundCage(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_GroundCage(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4635129781306974596,13546247118425831864));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Int32 Index
	{
		get
		{
			return _Index[Index];
		}
		set
		{
			_Index[Index] = value;
		}
	}
	public System.String TypeUp
	{
		get
		{
			return _TypeUp[Index];
		}
		set
		{
			_TypeUp[Index] = value;
		}
	}
	public System.Int32 Cost
	{
		get
		{
			return _Cost[Index];
		}
		set
		{
			_Cost[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Int32 Exp
	{
		get
		{
			return _Exp[Index];
		}
		set
		{
			_Exp[Index] = value;
		}
	}
	public System.String Visual
	{
		get
		{
			return _Visual[Index];
		}
		set
		{
			_Visual[Index] = value;
		}
	}
	public System.Single Idle
	{
		get
		{
			return _Idle[Index];
		}
		set
		{
			_Idle[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5317146965557496664,5855854834045719174));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4898364580807297476,18247121282492876977));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Index
	{
		get
		{
			if(_ufle12jhs77_Index==null || _ufle12jhs77_Index.IsDeleted) _ufle12jhs77_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5250189799440666456,14258746157695616942));
			return _ufle12jhs77_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_TypeUp;
	public static BansheeGz.BGDatabase.BGFieldString _TypeUp
	{
		get
		{
			if(_ufle12jhs77_TypeUp==null || _ufle12jhs77_TypeUp.IsDeleted) _ufle12jhs77_TypeUp=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5584864080474569783,6668281249538934678));
			return _ufle12jhs77_TypeUp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _Cost
	{
		get
		{
			if(_ufle12jhs77_Cost==null || _ufle12jhs77_Cost.IsDeleted) _ufle12jhs77_Cost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5727648167261581244,3354310503105516735));
			return _ufle12jhs77_Cost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5098030785070067022,18054626346441303446));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Exp;
	public static BansheeGz.BGDatabase.BGFieldInt _Exp
	{
		get
		{
			if(_ufle12jhs77_Exp==null || _ufle12jhs77_Exp.IsDeleted) _ufle12jhs77_Exp=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4798581157326330821,16771710791679556796));
			return _ufle12jhs77_Exp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Visual;
	public static BansheeGz.BGDatabase.BGFieldString _Visual
	{
		get
		{
			if(_ufle12jhs77_Visual==null || _ufle12jhs77_Visual.IsDeleted) _ufle12jhs77_Visual=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5741257852518519851,17847614325327162009));
			return _ufle12jhs77_Visual;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Idle;
	public static BansheeGz.BGDatabase.BGFieldFloat _Idle
	{
		get
		{
			if(_ufle12jhs77_Idle==null || _ufle12jhs77_Idle.IsDeleted) _ufle12jhs77_Idle=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4742482437735000055,2486993112150256806));
			return _ufle12jhs77_Idle;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_GroundCage() : base(MetaDefault)
	{
	}
	private DB_GroundCage(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_GroundCage(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_GroundCage(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_GroundCage FindEntity(Predicate<DB_GroundCage> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_GroundCage) entity)) as DB_GroundCage;
	}
	public static List<DB_GroundCage> FindEntities(Predicate<DB_GroundCage> filter, List<DB_GroundCage> result=null, Comparison<DB_GroundCage> sort=null)
	{
		result = result ?? new List<DB_GroundCage>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_GroundCage) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_GroundCage) e1, (DB_GroundCage) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_GroundCage) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_GroundCage> action, Predicate<DB_GroundCage> filter=null, Comparison<DB_GroundCage> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_GroundCage) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_GroundCage) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_GroundCage)e1,(DB_GroundCage)e2));
	}
	public static DB_GroundCage GetEntity(BGId entityId)
	{
		return (DB_GroundCage) MetaDefault.GetEntity(entityId);
	}
	public static DB_GroundCage GetEntity(int index)
	{
		return (DB_GroundCage) MetaDefault[index];
	}
	public static DB_GroundCage GetEntity(string entityName)
	{
		return (DB_GroundCage) MetaDefault.GetEntity(entityName);
	}
	public static DB_GroundCage NewEntity()
	{
		return (DB_GroundCage) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Chat : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Chat(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Chat(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5158557777386508878,3500629456228998815));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Single Ratio
	{
		get
		{
			return _Ratio[Index];
		}
		set
		{
			_Ratio[Index] = value;
		}
	}
	public System.Int32 Size
	{
		get
		{
			return _Size[Index];
		}
		set
		{
			_Size[Index] = value;
		}
	}
	public System.Single Cooldown
	{
		get
		{
			return _Cooldown[Index];
		}
		set
		{
			_Cooldown[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5021913961473888830,17229057607561666218));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5218279512599063195,5352427005322356925));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Ratio;
	public static BansheeGz.BGDatabase.BGFieldFloat _Ratio
	{
		get
		{
			if(_ufle12jhs77_Ratio==null || _ufle12jhs77_Ratio.IsDeleted) _ufle12jhs77_Ratio=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4727664318867974263,18134750075894130316));
			return _ufle12jhs77_Ratio;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Size;
	public static BansheeGz.BGDatabase.BGFieldInt _Size
	{
		get
		{
			if(_ufle12jhs77_Size==null || _ufle12jhs77_Size.IsDeleted) _ufle12jhs77_Size=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4639398483062106294,7229333165159277728));
			return _ufle12jhs77_Size;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Cooldown;
	public static BansheeGz.BGDatabase.BGFieldFloat _Cooldown
	{
		get
		{
			if(_ufle12jhs77_Cooldown==null || _ufle12jhs77_Cooldown.IsDeleted) _ufle12jhs77_Cooldown=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4978554752089515390,11211567081424577418));
			return _ufle12jhs77_Cooldown;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_Chat() : base(MetaDefault)
	{
	}
	private DB_Chat(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Chat(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Chat(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Chat FindEntity(Predicate<DB_Chat> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Chat) entity)) as DB_Chat;
	}
	public static List<DB_Chat> FindEntities(Predicate<DB_Chat> filter, List<DB_Chat> result=null, Comparison<DB_Chat> sort=null)
	{
		result = result ?? new List<DB_Chat>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Chat) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Chat) e1, (DB_Chat) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Chat) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Chat> action, Predicate<DB_Chat> filter=null, Comparison<DB_Chat> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Chat) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Chat) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Chat)e1,(DB_Chat)e2));
	}
	public static DB_Chat GetEntity(BGId entityId)
	{
		return (DB_Chat) MetaDefault.GetEntity(entityId);
	}
	public static DB_Chat GetEntity(int index)
	{
		return (DB_Chat) MetaDefault[index];
	}
	public static DB_Chat GetEntity(string entityName)
	{
		return (DB_Chat) MetaDefault.GetEntity(entityName);
	}
	public static DB_Chat NewEntity()
	{
		return (DB_Chat) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_GroundStore : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_GroundStore(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_GroundStore(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5685322524794880122,13239152589801909692));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Index
	{
		get
		{
			return _Index[Index];
		}
		set
		{
			_Index[Index] = value;
		}
	}
	public System.String TypeUp
	{
		get
		{
			return _TypeUp[Index];
		}
		set
		{
			_TypeUp[Index] = value;
		}
	}
	public System.Int32 Cost
	{
		get
		{
			return _Cost[Index];
		}
		set
		{
			_Cost[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.String Visual
	{
		get
		{
			return _Visual[Index];
		}
		set
		{
			_Visual[Index] = value;
		}
	}
	public System.Int32 Exp
	{
		get
		{
			return _Exp[Index];
		}
		set
		{
			_Exp[Index] = value;
		}
	}
	public System.Single Idle
	{
		get
		{
			return _Idle[Index];
		}
		set
		{
			_Idle[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5171515092977675739,10075514912690313905));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Index
	{
		get
		{
			if(_ufle12jhs77_Index==null || _ufle12jhs77_Index.IsDeleted) _ufle12jhs77_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5018306669041914689,12729634259538392451));
			return _ufle12jhs77_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_TypeUp;
	public static BansheeGz.BGDatabase.BGFieldString _TypeUp
	{
		get
		{
			if(_ufle12jhs77_TypeUp==null || _ufle12jhs77_TypeUp.IsDeleted) _ufle12jhs77_TypeUp=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5668949686000596955,6779867553859107722));
			return _ufle12jhs77_TypeUp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _Cost
	{
		get
		{
			if(_ufle12jhs77_Cost==null || _ufle12jhs77_Cost.IsDeleted) _ufle12jhs77_Cost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5220055478264556524,15553294199841286788));
			return _ufle12jhs77_Cost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4969532385822301484,17683523312755777962));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Visual;
	public static BansheeGz.BGDatabase.BGFieldString _Visual
	{
		get
		{
			if(_ufle12jhs77_Visual==null || _ufle12jhs77_Visual.IsDeleted) _ufle12jhs77_Visual=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5307687257147367530,6096157975670249117));
			return _ufle12jhs77_Visual;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Exp;
	public static BansheeGz.BGDatabase.BGFieldInt _Exp
	{
		get
		{
			if(_ufle12jhs77_Exp==null || _ufle12jhs77_Exp.IsDeleted) _ufle12jhs77_Exp=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5014776139693615452,6248373238273019821));
			return _ufle12jhs77_Exp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Idle;
	public static BansheeGz.BGDatabase.BGFieldFloat _Idle
	{
		get
		{
			if(_ufle12jhs77_Idle==null || _ufle12jhs77_Idle.IsDeleted) _ufle12jhs77_Idle=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4896474182262213288,6982611336701347250));
			return _ufle12jhs77_Idle;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_GroundStore() : base(MetaDefault)
	{
	}
	private DB_GroundStore(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_GroundStore(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_GroundStore(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_GroundStore FindEntity(Predicate<DB_GroundStore> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_GroundStore) entity)) as DB_GroundStore;
	}
	public static List<DB_GroundStore> FindEntities(Predicate<DB_GroundStore> filter, List<DB_GroundStore> result=null, Comparison<DB_GroundStore> sort=null)
	{
		result = result ?? new List<DB_GroundStore>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_GroundStore) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_GroundStore) e1, (DB_GroundStore) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_GroundStore) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_GroundStore> action, Predicate<DB_GroundStore> filter=null, Comparison<DB_GroundStore> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_GroundStore) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_GroundStore) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_GroundStore)e1,(DB_GroundStore)e2));
	}
	public static DB_GroundStore GetEntity(BGId entityId)
	{
		return (DB_GroundStore) MetaDefault.GetEntity(entityId);
	}
	public static DB_GroundStore GetEntity(int index)
	{
		return (DB_GroundStore) MetaDefault[index];
	}
	public static DB_GroundStore GetEntity(string entityName)
	{
		return (DB_GroundStore) MetaDefault.GetEntity(entityName);
	}
	public static DB_GroundStore NewEntity()
	{
		return (DB_GroundStore) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Player : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Player(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Player(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5215057430368889066,12502521415161644979));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Index
	{
		get
		{
			return _Index[Index];
		}
		set
		{
			_Index[Index] = value;
		}
	}
	public System.Int32 MaxExp
	{
		get
		{
			return _MaxExp[Index];
		}
		set
		{
			_MaxExp[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.String> Rewards
	{
		get
		{
			return _Rewards[Index];
		}
		set
		{
			_Rewards[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5657433427983767010,11759325521166988424));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Index
	{
		get
		{
			if(_ufle12jhs77_Index==null || _ufle12jhs77_Index.IsDeleted) _ufle12jhs77_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5189981001282610912,499252907084211873));
			return _ufle12jhs77_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxExp;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxExp
	{
		get
		{
			if(_ufle12jhs77_MaxExp==null || _ufle12jhs77_MaxExp.IsDeleted) _ufle12jhs77_MaxExp=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4789138813480261112,13770108600789864340));
			return _ufle12jhs77_MaxExp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_Rewards;
	public static BansheeGz.BGDatabase.BGFieldListString _Rewards
	{
		get
		{
			if(_ufle12jhs77_Rewards==null || _ufle12jhs77_Rewards.IsDeleted) _ufle12jhs77_Rewards=(BansheeGz.BGDatabase.BGFieldListString) MetaDefault.GetField(new BGId(5482173625716092835,13647982705607008956));
			return _ufle12jhs77_Rewards;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_Player() : base(MetaDefault)
	{
	}
	private DB_Player(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Player(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Player(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Player FindEntity(Predicate<DB_Player> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Player) entity)) as DB_Player;
	}
	public static List<DB_Player> FindEntities(Predicate<DB_Player> filter, List<DB_Player> result=null, Comparison<DB_Player> sort=null)
	{
		result = result ?? new List<DB_Player>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Player) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Player) e1, (DB_Player) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Player) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Player> action, Predicate<DB_Player> filter=null, Comparison<DB_Player> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Player) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Player) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Player)e1,(DB_Player)e2));
	}
	public static DB_Player GetEntity(BGId entityId)
	{
		return (DB_Player) MetaDefault.GetEntity(entityId);
	}
	public static DB_Player GetEntity(int index)
	{
		return (DB_Player) MetaDefault[index];
	}
	public static DB_Player GetEntity(string entityName)
	{
		return (DB_Player) MetaDefault.GetEntity(entityName);
	}
	public static DB_Player NewEntity()
	{
		return (DB_Player) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_General : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_General(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_General(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5033057752812805597,6501790984039646337));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Name
	{
		get
		{
			return _Name[Index];
		}
		set
		{
			_Name[Index] = value;
		}
	}
	public System.String Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5200394703058699942,5807765251162682273));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Name;
	public static BansheeGz.BGDatabase.BGFieldString _Name
	{
		get
		{
			if(_ufle12jhs77_Name==null || _ufle12jhs77_Name.IsDeleted) _ufle12jhs77_Name=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5080954793424731471,14907295612307905155));
			return _ufle12jhs77_Name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldString _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4895618618559419384,6977720910322627772));
			return _ufle12jhs77_Value;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_General() : base(MetaDefault)
	{
	}
	private DB_General(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_General(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_General(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_General FindEntity(Predicate<DB_General> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_General) entity)) as DB_General;
	}
	public static List<DB_General> FindEntities(Predicate<DB_General> filter, List<DB_General> result=null, Comparison<DB_General> sort=null)
	{
		result = result ?? new List<DB_General>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_General) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_General) e1, (DB_General) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_General) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_General> action, Predicate<DB_General> filter=null, Comparison<DB_General> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_General) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_General) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_General)e1,(DB_General)e2));
	}
	public static DB_General GetEntity(BGId entityId)
	{
		return (DB_General) MetaDefault.GetEntity(entityId);
	}
	public static DB_General GetEntity(int index)
	{
		return (DB_General) MetaDefault[index];
	}
	public static DB_General GetEntity(string entityName)
	{
		return (DB_General) MetaDefault.GetEntity(entityName);
	}
	public static DB_General NewEntity()
	{
		return (DB_General) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Language : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Language(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Language(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4971458878996820377,6018456447831788946));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Language
	{
		get
		{
			return _Language[Index];
		}
		set
		{
			_Language[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4631761300566090688,925235198337617343));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Language;
	public static BansheeGz.BGDatabase.BGFieldString _Language
	{
		get
		{
			if(_ufle12jhs77_Language==null || _ufle12jhs77_Language.IsDeleted) _ufle12jhs77_Language=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5094291148714323459,5058398219490259094));
			return _ufle12jhs77_Language;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_Language() : base(MetaDefault)
	{
	}
	private DB_Language(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Language(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Language(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Language FindEntity(Predicate<DB_Language> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Language) entity)) as DB_Language;
	}
	public static List<DB_Language> FindEntities(Predicate<DB_Language> filter, List<DB_Language> result=null, Comparison<DB_Language> sort=null)
	{
		result = result ?? new List<DB_Language>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Language) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Language) e1, (DB_Language) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Language) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Language> action, Predicate<DB_Language> filter=null, Comparison<DB_Language> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Language) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Language) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Language)e1,(DB_Language)e2));
	}
	public static DB_Language GetEntity(BGId entityId)
	{
		return (DB_Language) MetaDefault.GetEntity(entityId);
	}
	public static DB_Language GetEntity(int index)
	{
		return (DB_Language) MetaDefault[index];
	}
	public static DB_Language GetEntity(string entityName)
	{
		return (DB_Language) MetaDefault.GetEntity(entityName);
	}
	public static DB_Language NewEntity()
	{
		return (DB_Language) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Act : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Act(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Act(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5091907607938846749,1468480366767120272));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Int32 Cost
	{
		get
		{
			return _Cost[Index];
		}
		set
		{
			_Cost[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5749503891968792825,14481966643631606158));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5537824827378463454,7516411710302430359));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _Cost
	{
		get
		{
			if(_ufle12jhs77_Cost==null || _ufle12jhs77_Cost.IsDeleted) _ufle12jhs77_Cost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5133205309316697960,1936322698606105779));
			return _ufle12jhs77_Cost;
		}
	}
	private static readonly DB_Crop.Factory _factory0_PFS = new DB_Crop.Factory();
	private static readonly DB_Animal.Factory _factory1_PFS = new DB_Animal.Factory();
	private static readonly DB_Human.Factory _factory2_PFS = new DB_Human.Factory();
	private static readonly DB_GroundLand.Factory _factory3_PFS = new DB_GroundLand.Factory();
	private static readonly DB_GroundCage.Factory _factory4_PFS = new DB_GroundCage.Factory();
	private static readonly DB_Chat.Factory _factory5_PFS = new DB_Chat.Factory();
	private static readonly DB_GroundStore.Factory _factory6_PFS = new DB_GroundStore.Factory();
	private static readonly DB_Player.Factory _factory7_PFS = new DB_Player.Factory();
	private static readonly DB_General.Factory _factory8_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory9_PFS = new DB_Language.Factory();
	private static readonly DB_Act.Factory _factory10_PFS = new DB_Act.Factory();
	private DB_Act() : base(MetaDefault)
	{
	}
	private DB_Act(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Act(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Act(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Act FindEntity(Predicate<DB_Act> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Act) entity)) as DB_Act;
	}
	public static List<DB_Act> FindEntities(Predicate<DB_Act> filter, List<DB_Act> result=null, Comparison<DB_Act> sort=null)
	{
		result = result ?? new List<DB_Act>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Act) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Act) e1, (DB_Act) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Act) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Act> action, Predicate<DB_Act> filter=null, Comparison<DB_Act> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Act) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Act) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Act)e1,(DB_Act)e2));
	}
	public static DB_Act GetEntity(BGId entityId)
	{
		return (DB_Act) MetaDefault.GetEntity(entityId);
	}
	public static DB_Act GetEntity(int index)
	{
		return (DB_Act) MetaDefault[index];
	}
	public static DB_Act GetEntity(string entityName)
	{
		return (DB_Act) MetaDefault.GetEntity(entityName);
	}
	public static DB_Act NewEntity()
	{
		return (DB_Act) MetaDefault.NewEntity();
	}
}
#pragma warning restore 414
